{"version":3,"sources":["redux/actions.js","redux/movieReducer.js","redux/store.js","pages/ModalPage.js","pages/Header.js","pages/HomePage.js","pages/Favorite.js","App.js","serviceWorker.js","index.js"],"names":["FILM_ACTIONS","unSetFavourite","id","type","payload","INITITAL_STATE","films","rootReducer","combineReducers","filmData","state","action","filter","persistConfig","key","storage","persistedReducer","persistReducer","ModalPage","props","dispatch","useDispatch","isFavorite","useSelector","some","v","modalPage","clickHandler","className","style","backgroundImage","poster_path","width","height","backgroundSize","backgroundPosition","backgroundColor","onClick","setModalPage","totalFilms","viewBox","fill","xmlns","fillRule","d","setNextFilm","src","alt","original_title","parseInt","release_date","vote_average","adult","overview","Header","to","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","HomePage","useState","data","setData","page","setPage","pagesAmount","setPagesAmount","filmsAmountPerPage","setFilmsAmountPerPage","useEffect","fetch","then","res","json","results","length","total_results","catch","error","console","map","el","index","filmClickHandler","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","prevPageText","nextPageText","firstPageText","lastPageText","hideDisabled","itemClass","linkClass","Favorite","favoriteFilms","film","App","exact","path","Boolean","window","location","hostname","match","store","createStore","persistor","persistStore","configStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.367429b9.chunk.js","sourcesContent":["const FILM_ACTIONS = {\n  SET_FAVOURITE: \"SET_FAVOURITE\",\n  UNSET_FAVOURITE: \"UNSET_FAVOURITE\"\n};\n\nconst setFavourite = filmData => {\n  return {\n    type: FILM_ACTIONS.SET_FAVOURITE,\n    payload: filmData\n  };\n};\nconst unSetFavourite = id => {\n  return {\n    type: FILM_ACTIONS.UNSET_FAVOURITE,\n    payload: id\n  };\n};\n\nexport { unSetFavourite, setFavourite, FILM_ACTIONS };\n","import { FILM_ACTIONS } from \"./actions\";\n\nconst INITITAL_STATE = {\n  films: []\n};\n\nconst movieReducer = (state = INITITAL_STATE, action) => {\n  switch (action.type) {\n    case FILM_ACTIONS.SET_FAVOURITE: {\n      return {\n        ...state,\n        films: [...state.films,action.payload]\n      };\n    }\n    case FILM_ACTIONS.UNSET_FAVOURITE: {\n      return {\n        ...state,\n        films: state.films.filter(filmData => filmData.id !== action.payload)\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { movieReducer };\n","import { createStore, combineReducers } from \"redux\";\nimport { movieReducer } from \"./movieReducer\";\n// REDUX PERSIST\n\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n \n\nconst rootReducer = combineReducers({\n  filmData: movieReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n \nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n \nexport default () => {\n  let store = createStore(persistedReducer)\n  let persistor = persistStore(store)\n  return { store, persistor }\n}\n// REDUX\n\n\n// const store = createStore(\n//   reducers,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   );\n\n// export default store;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setFavourite, unSetFavourite } from \"../redux/actions\";\n\nconst ModalPage = (props) => {\n    \n    \n    const dispatch = useDispatch();\n    const favorFilms = useSelector(state => state.filmData.films);\n    const isFavorite = favorFilms.some(v => v.id === props.modalPage.filmData.id);\n    const clickHandler = () => {\n        if (isFavorite) {\n            dispatch(unSetFavourite(props.modalPage.filmData.id));\n        } else {\n            dispatch(setFavourite(props.modalPage.filmData));\n        }\n    };\n    return (\n        <div\n            className=\"modal-bg\"\n            style={{\n                backgroundImage: `url(http://image.tmdb.org/t/p/original/${props.modalPage.filmData.poster_path})`,\n                width: \"100%\",\n                height: \"100vh\",\n                backgroundSize: \"cover\",\n\n                backgroundPosition: \"center\",\n                backgroundColor: \"rgb(0, 0, 0, 0.7)\"\n            }}\n        >\n            <div className=\"modal-container\">\n                {/* MODAL HEADER */}\n                <div className=\"modal-header\">\n                    {/* HEADER-LEFT-BUTTON */}\n                    {/* LEFT-BUTTON-DESKTOP */}\n                    <div\n                        className=\"left-button-desktop active-button\"\n                        onClick={() => {\n                            props.setModalPage({ filmData: null, id: 0, totalFilms: 0 });\n                        }}\n                    >\n                        <svg\n                            width=\"1.5em\"\n                            height=\"1.5em\"\n                            viewBox=\"0 0 16 16\"\n                            className=\"bi bi-arrow-left-circle\"\n                            fill=\"currentColor\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"\n                            />\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5z\"\n                            />\n                        </svg>\n                        <span className=\"button-text\">Back to list</span>\n                    </div>\n                    {/* LEFT-BUTTON-MOBILE */}\n                    <div\n                        className=\"left-button-mobile active-button\"\n                        onClick={() => {\n                            props.setModalPage({ filmData: null, id: 0, totalFilms: 0 });\n                        }}\n                    >\n                        <svg\n                            width=\"2em\"\n                            height=\"2em\"\n                            viewBox=\"0 0 16 16\"\n                            className=\"bi bi-arrow-left-short\"\n                            fill=\"currentColor\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5z\"\n                            />\n                        </svg>\n                        <span className=\"button-text\">Back</span>\n                    </div>\n                    {/* HEADER-RIGHT-BUTTON */}\n                    {/* RIGHT-BUTTON-DESKTOP */}\n                    {props.modalPage.id >= props.modalPage.totalFilms ? null : (\n                        <div\n                            className=\"right-button-desktop active-button \"\n                            onClick={() => props.setNextFilm(props.modalPage.id)}\n                        >\n                            <span className=\"button-text\">Next Movie</span>\n                            <svg\n                                width=\"1.5em\"\n                                height=\"1.5em\"\n                                viewBox=\"0 0 16 16\"\n                                className=\"bi bi-arrow-right-circle\"\n                                fill=\"currentColor\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path\n                                    fillRule=\"evenodd\"\n                                    d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"\n                                />\n                                <path\n                                    fillRule=\"evenodd\"\n                                    d=\"M4 8a.5.5 0 0 0 .5.5h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5A.5.5 0 0 0 4 8z\"\n                                />\n                            </svg>\n                        </div>\n                    )}\n                    {/* RIGHT-BUTTON-MOBILE */}\n                    {props.modalPage.id >= props.modalPage.totalFilms ? null : (\n                        <div\n                            className=\"right-button-mobile active-button \"\n                            onClick={() => props.setNextFilm(props.modalPage.id)}\n                        >\n                            <span className=\"button-text\">Next</span>\n                            <svg\n                                width=\"2em\"\n                                height=\"2em\"\n                                viewBox=\"0 0 16 16\"\n                                className=\"bi bi-arrow-right-short\"\n                                fill=\"currentColor\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path\n                                    fillRule=\"evenodd\"\n                                    d=\"M4 8a.5.5 0 0 1 .5-.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5A.5.5 0 0 1 4 8z\"\n                                />\n                            </svg>\n                        </div>\n                    )}\n                </div>\n\n                {/* MODAL MAIN */}\n\n                <div className=\"modal-main\">\n                    <div className=\"modal-image\">\n                        <img\n                            src={`http://image.tmdb.org/t/p/w342/${props.modalPage.filmData.poster_path}`}\n                            alt=\"Coming sooon.....\"\n                        />\n                    </div>\n                    <div className=\"main-information\">\n                        <div className=\"modal-information-title-desktop\">\n                            <h1>\n                                {props.modalPage.filmData.original_title} (\n                {parseInt(props.modalPage.filmData.release_date)})\n              </h1>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-outline-secondary favorite-button\"\n                                onClick={clickHandler}\n                            >\n                                {isFavorite ? \"UnFavorite\" : \"Add to favorite\"}\n                            </button>\n                        </div>\n                        {/* MODAL-INFORMATION-SCORE-DESKTOP */}\n                        <div className=\"modal-information-desktop\">\n                            <div className=\"modal-information-score\">\n                                <span>\n                                    Score:  {props.modalPage.filmData.vote_average}</span>\n                                <span>\n                                    Rating:  {props.modalPage.filmData.adult ? \"R\" : \"PG-13\"}</span>\n                                <span>\n                                    Realese Date:  {props.modalPage.filmData.release_date}</span>\n                            </div>\n                            <div className=\"modal-information-overview-desktop\">\n                                <p>{props.modalPage.filmData.overview}</p>\n                            </div>\n                        </div>\n                        {/* MODAL-INFORMATION-MOBILE */}\n                        <div className=\"modal-information-mobile\">\n                            <div className=\"modal-information-score\">\n                                <span>\n                                \n                                <b>Score:</b>{props.modalPage.filmData.vote_average}\n                                \n                                </span>\n                                <span>\n                                    <b>Rating:</b>  {props.modalPage.filmData.adult ? \"R\" : \"PG-13\"}\n                                </span>\n                                <span><b>Realese Date:</b>  {props.modalPage.filmData.release_date}</span>\n                            </div>\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-outline-secondary favorite-button mobile-favorite-button\"\n                                onClick={clickHandler}\n                            >\n                                {isFavorite ? \n                                <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\"bi bi-star-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n                              </svg> : \n                                <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\"bi bi-star\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"/>\n                              </svg>}\n                            </button>\n                        </div>\n                       \n                    </div>\n                </div>\n\n                <div className=\"modal-information-title-mobile\">\n                    <h1>\n                        {props.modalPage.filmData.original_title} (\n            {parseInt(props.modalPage.filmData.release_date)})\n          </h1>\n                </div>\n                <div className=\"modal-information-overview-mobile\">\n                    <p>{props.modalPage.filmData.overview}</p>\n                </div>\n            </div>{\" \"}\n        </div>\n    );\n};\n\nexport default ModalPage;\n","import React  from 'react';\nimport { Link } from \"react-router-dom\";\nconst Header = (props) => {\n  return (\n    \n   <div className=\"header-wrapper\">\n      <div className=\"left-header\">\n        \n      <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\"bi bi-globe\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4H2.255a7.025 7.025 0 0 1 3.072-2.472 6.7 6.7 0 0 0-.597.933c-.247.464-.462.98-.64 1.539zm-.582 3.5h-2.49c.062-.89.291-1.733.656-2.5H3.82a13.652 13.652 0 0 0-.312 2.5zM4.847 5H7.5v2.5H4.51A12.5 12.5 0 0 1 4.846 5zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5H7.5V11H4.847a12.5 12.5 0 0 1-.338-2.5zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12H7.5v2.923c-.67-.204-1.335-.82-1.887-1.855A7.97 7.97 0 0 1 5.145 12zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11H1.674a6.958 6.958 0 0 1-.656-2.5h2.49c.03.877.138 1.718.312 2.5zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12h2.355a7.967 7.967 0 0 1-.468 1.068c-.552 1.035-1.218 1.65-1.887 1.855V12zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5h-2.49A13.65 13.65 0 0 0 12.18 5h2.146c.365.767.594 1.61.656 2.5zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4H8.5V1.077c.67.204 1.335.82 1.887 1.855.173.324.33.682.468 1.068z\"/>\n</svg>\n    <Link \n    to=\"/\" \n    onClick={() => {props.setModalPage({ filmData: null, id: 0, totalFilms: 0 });}}\n    >\n    <h3>Movies</h3>\n    </Link>\n      </div>\n\n      <div className=\"right-header\">\n                <div className=\"dropdown\">\n            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              <span className=\"btn-text\" >My account</span>\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              \n              <Link className=\"dropdown-item\" to=\"/\" \n              onClick={() => {props.setModalPage({ filmData: null, id: 0, totalFilms: 0 });}}\n              >Main Page</Link>\n              <Link className=\"dropdown-item\" to=\"/favorite\"\n              onClick={() => {props.setModalPage({ filmData: null, id: 0, totalFilms: 0 });}}\n              >Favorite</Link>\n              \n            </div>\n          </div>\n      </div>\n      \n   \n   \n   \n   \n   \n   </div>\n   \n  );\n}\n\nexport default Header;","import React, { useState, useEffect } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport ModalPage from \"./ModalPage\";\nimport Header from \"./Header\"\n\nconst HomePage = (props) => {\n  const [modalPage, setModalPage] = useState({\n    filmData: null,\n    id: 0,\n    totalFilms: 0\n  });\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [pagesAmount, setPagesAmount] = useState(1);\n  const [filmsAmountPerPage, setFilmsAmountPerPage] = useState(0);\n\n  const setNextFilmHandler = id => {\n    setModalPage({\n      filmData: data[id],\n      id: id + 1,\n      totalFilms: filmsAmountPerPage\n    });\n  };\n\n  const filmClickHandler = (el, id) => {\n\n    setModalPage({\n      filmData: el,\n      id: id,\n      totalFilms: filmsAmountPerPage\n    });\n  };\n  // // let pagBtn = (btnNum) => setPage(btnNum.selected + 1);\n  // For react-paginate\n\n  useEffect(() => {\n    fetch(\n      `http://api.themoviedb.org/3/movie/now_playing?api_key=ebea8cfca72fdff8d2624ad7bbf78e4c&page=${page}`\n    )\n      .then(res => res.json())\n      .then(res => {\n        setPage(res.page);\n        setData(res.results);\n        setFilmsAmountPerPage(res.results.length);\n        setPagesAmount(res.total_results);\n      })\n      .catch(error => console.error(\"Ошибка:\", error));\n  }, [page]);\n  const films = data.map((el, index) => {\n    return (\n      <div\n        key={el.id}\n        onClick={() => {\n          filmClickHandler(el, index + 1);\n        }}\n        className=\"poster-wrap\"\n      >\n        <div className=\"image-wrap\">\n          <img\n            src={`http://image.tmdb.org/t/p/w342/${el.poster_path}`}\n            alt=\"Coming sooon.....\"\n          />\n          <div className=\"image-text\">\n            <div>\n              <strong>{el.original_title}</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  });\n  return modalPage?.filmData === null ? (\n<>\n    \n      <div className= {modalPage?.filmData === null ? \"\" : \"modal-menu\"}>\n              <Header \n              setModalPage={setModalPage}\n              modalPage={modalPage}\n              />\n      </div>\n    \n    <div className=\"main-container\">\n        <div className=\"main-title\">\n          <h2>Latest Releases</h2>\n        </div>\n        <div className=\"main-content\">{films}</div>\n        <div className=\"main-footer\">\n          <div className=\"footer-paginate\">\n            <Pagination\n              activePage={page}\n              itemsCountPerPage={20}\n              totalItemsCount={pagesAmount}\n              pageRangeDisplayed={3}\n              onChange={setPage}\n              prevPageText={\"Prev\"}\n              nextPageText={\"Next\"}\n              firstPageText={\"First\"}\n              lastPageText={\"Last\"}\n              hideDisabled={true}\n              itemClass=\"page-item\"\n              linkClass=\"page-link\"\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  ) : (\n    <>\n    <div className= {modalPage?.filmData === null ? \"\" : \"modal-menu\"}>\n              <Header \n              setModalPage={setModalPage}\n              modalPage={modalPage}\n              />\n    </div>\n      <ModalPage\n        setModalPage={setModalPage}\n        modalPage={modalPage}\n        setNextFilm={setNextFilmHandler}\n      />\n    </>\n    );\n};\n\nexport default HomePage;\n","import React, {useState} from 'react';\nimport ModalPage from '../pages/ModalPage'\nimport { useSelector , useDispatch } from 'react-redux';\nimport { unSetFavourite } from '../redux/actions';\nimport Header from \"./Header\"\n\n\nconst Favorite = (props) => {\n    \n    \n    \n    const dispatch = useDispatch();\n    \n    const favoriteFilms = useSelector(state => state.filmData.films)\n    const [modalPage, setModalPage] = useState({\n        filmData: null,\n        id: 0,\n        totalFilms: favoriteFilms.length\n      });\n    const unSetFavoriteHandler = id => {\n        return dispatch(unSetFavourite(id));\n    }\n      \n\n    const setNextFilmHandler = id => {\n        setModalPage({\n          filmData: favoriteFilms[id],\n          id: id + 1,\n          totalFilms: favoriteFilms.length\n        });\n      };\n    \n      const filmClickHandler = (el , id) => {\n          \n        setModalPage({\n          filmData: el,\n          id: id,\n          totalFilms: favoriteFilms.length\n        });\n      };\n\n\n    const films = favoriteFilms.length > 0 ? favoriteFilms.map((film,index) => (\n    <div className=\"favorite-main\" key={film.id}>\n    <div className=\"favorite-main-img \" \n    onClick={() => {\n        filmClickHandler(film, index + 1);\n      }} ><img src={`http://image.tmdb.org/t/p/w342/${film.poster_path}`}  alt='Coming sooon.....'/></div>\n    <div className=\"favorite-main-information\">\n        <div className=\"favorite-information-title\">\n            <h2>{film.original_title}</h2>\n            <button type=\"button\" className=\"btn btn-outline-secondary button-favorite-page\"  onClick={() => unSetFavoriteHandler(film.id) }>Unfavorite</button>\n        </div>\n    <div className=\"favorite-information-overview\"><p>{film.overview}</p></div>\n    </div>\n</div>\n)) : (<p>You dont have favourites films ;(</p>);\n\n\n    return modalPage?.filmData === null ? (\n    <>\n\n        <div className= {modalPage?.filmData === null ? \"\" : \"modal-menu\"}>\n              <Header\n              setModalPage={setModalPage}\n              modalPage={modalPage}\n              />\n        </div>\n        <div className=\"main-container\">\n            <div className=\"main-title\"><h2>My favorite</h2></div>\n            {films}\n            \n\n\n        </div>\n        \n    </>\n        )\n    \n    : (\n    <>\n        <div className= {modalPage?.filmData === null ? \"\" : \"modal-menu\"}>\n              <Header\n              setModalPage={setModalPage}\n              modalPage={modalPage}\n              />\n        </div>\n        <ModalPage\n          setModalPage={setModalPage}\n          modalPage={modalPage}\n          setNextFilm={setNextFilmHandler}\n        />\n    </>\n      );\n}\n\nexport default Favorite;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport Favorite from \"./pages/Favorite\";\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n\n            <HomePage />\n          </Route>\n          <Route path=\"/favorite\">\n\n            <Favorite />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configStore from './redux/store'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { PersistGate } from 'redux-persist/integration/react'\nconst {store,persistor} = configStore()\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}><App /></PersistGate>\n    \n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}